{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","Notification","message","className","styles","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","formSubmit","evt","preventDefault","formSubmitInput_name","type","onChange","formSubmitInput_number","formSubmitButton","ContactFilter","filter","onFilterChange","filterTitle","filterInput","autoFocus","defaultProps","ContactItem","id","onDeleteContact","contactName","contactDeleteButton","onClick","ContactList","contacts","contactList","map","contactListItem","initalContact","App","setContacts","setFilter","useEffect","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","some","contact","toLowerCase","alert","prevContacts","v4","length","e","includes","visibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3645c6d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmit\":\"ContactForm_formSubmit__11Q_R\",\"formSubmitInput\":\"ContactForm_formSubmitInput__25gfI\",\"formSubmitButton\":\"ContactForm_formSubmitButton__1-fix\",\"formSubmitInput_number\":\"ContactForm_formSubmitInput_number__3z-9c ContactForm_formSubmitInput__25gfI\",\"formSubmitInput_name\":\"ContactForm_formSubmitInput_name__3IHa8 ContactForm_formSubmitInput__25gfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__3lQ7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1IrHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1kD5d\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import {  useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    // Проп который передается форме для вызова при сабмите\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.formSubmit} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={styles.formSubmitInput_name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={styles.formSubmitInput_number}\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={styles.formSubmitButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css'\r\n\r\nconst ContactFilter = ({ filter, onFilterChange }) => (\r\n  <>\r\n  <h3 className={styles.filterTitle}>Find contact by name</h3>\r\n  <input className= {styles.filterInput} type=\"text\" value={filter} onChange={onFilterChange} autoFocus />\r\n  </>\r\n);\r\nContactFilter.defaultProps = {\r\n    filter: '',\r\n  };\r\nContactFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onFilterChange: PropTypes.func.isRequired,\r\n  };\r\nexport default ContactFilter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\r\n  <>\r\n    <span className={styles.contactName}>\r\n      {name}: {number}\r\n    </span>\r\n    <button\r\n      className={styles.contactDeleteButton}\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Удалить\r\n    </button>\r\n  </>\r\n);\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport ContactItem from './ContactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.contactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles.contactListItem} key={id}>\r\n        <ContactItem\r\n        id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={()=>onDeleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\nimport Notification from './Notification/Notification';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactFilter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nimport { v4 } from 'uuid';\n\nconst initalContact = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initalContact);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const sameName = contacts.some(\n      contact => name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (sameName) {\n      alert(`${name} already in contacts`);\n      return;\n    }\n    setContacts(prevContacts => [{ id: v4(), name, number }, ...prevContacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  useEffect(() => {\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts !== null) {\n    setContacts(JSON.parse(persistedContacts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const visibleContact = () => {\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter),\n      );\n    }\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? (\n        <div>\n          <ContactFilter filter={filter} onFilterChange={handleFilterChange} />\n          <ContactList\n            contacts={visibleContact()}\n            onDeleteContact={deleteContact}\n          />\n        </div>\n      ) : (\n        <Notification message=\"No number in the phone book\" />\n      )}\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}